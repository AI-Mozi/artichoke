---
name: Fuzz and Sanitize
"on":
  push:
    branches:
      - trunk
  schedule:
    - cron: "0 12 * * *"
jobs:
  fuzz-eval:
    name: Fuzz eval
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install nightly Rust toolchain
        run: |
          echo "::group::rustup toolchain install"
          rustup toolchain install nightly --profile minimal
          echo "::endgroup::"
          echo "::group::rustup version"
          rustup -Vv
          echo "::endgroup::"
          echo "::group::rustc version"
          rustc -Vv
          echo "::endgroup::"
          echo "::group::cargo version"
          cargo version --verbose
          echo "::endgroup::"

      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz

      - name: Build fuzz targets
        run: cargo fuzz build

      - name: Fuzz eval
        if: github.event_name == 'schedule'
        run: cargo fuzz run eval -- -max_total_time=1800 # 30 minutes

  leak-san:
    name: Compile and test with LeakSanitizer
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Z sanitizer=leak
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install nightly Rust toolchain
        run: |
          echo "::group::rustup toolchain install"
          rustup toolchain install nightly --profile minimal --target x86_64-unknown-linux-gnu
          echo "::endgroup::"
          echo "::group::rustup version"
          rustup -Vv
          echo "::endgroup::"
          echo "::group::rustc version"
          rustc -Vv
          echo "::endgroup::"
          echo "::group::cargo version"
          cargo version --verbose
          echo "::endgroup::"

      - name: Test with leak sanitizer and all features
        run: cargo test --workspace --all-features --target x86_64-unknown-linux-gnu

      - name: Test spec-runner with leak sanitizer and all features
        run: cargo test --workspace --all-features --target x86_64-unknown-linux-gnu
        working-directory: "spec-runner"
